#!/bin/bash

# Function to apply disk scheduler
apply_disk_scheduler() {
    local disk_name="$1"
    local scheduler="$2"
    local scheduler_path="/sys/block/$disk_name/queue/scheduler"
    
    if [ ! -f "$scheduler_path" ]; then
        echo "Warning: Scheduler file not found for disk $disk_name: $scheduler_path"
        return 1
    fi
    
    if [ ! -w "$scheduler_path" ]; then
        echo "Warning: Cannot write to scheduler file for disk $disk_name: $scheduler_path"
        return 1
    fi
    
    echo "Applying scheduler '$scheduler' to disk $disk_name"
    
    # Check if scheduler is available
    if ! grep -q "$scheduler" "$scheduler_path"; then
        echo "Error: Scheduler '$scheduler' not available for disk $disk_name"
        echo "Available schedulers: $(cat "$scheduler_path" | tr -d '[]')"
        return 1
    fi
    
    # Apply the scheduler
    if echo "$scheduler" > "$scheduler_path"; then
        echo "  Successfully applied scheduler '$scheduler' to $disk_name"
        return 0
    else
        echo "  Error: Failed to apply scheduler '$scheduler' to $disk_name"
        return 1
    fi
}

# Main script logic
if [ $# -eq 0 ]; then
    echo "Usage: $0 <disk1:scheduler1> [disk2:scheduler2] ..."
    echo "Example: $0 sda:bfq sdb:mq-deadline"
    echo ""
    echo "Available disk schedulers can be found in /sys/block/*/queue/scheduler"
    exit 1
fi

echo "volt-disk: Managing disk I/O schedulers"
echo

# Track success/failure
total_changes=0
successful_changes=0

# Process each disk:scheduler pair
for arg in "$@"; do
    if [[ "$arg" == *":"* ]]; then
        disk_name="${arg%%:*}"
        scheduler="${arg#*:}"
        
        total_changes=$((total_changes + 1))
        
        echo "Processing: $disk_name -> $scheduler"
        
        if apply_disk_scheduler "$disk_name" "$scheduler"; then
            successful_changes=$((successful_changes + 1))
        fi
        
        echo
    else
        echo "Warning: Invalid format '$arg'. Expected format: disk:scheduler"
        echo
    fi
done

echo "volt-disk: Operation completed"
echo "Applied $successful_changes out of $total_changes scheduler changes"

# Exit with error if any changes failed
if [ $successful_changes -eq $total_changes ]; then
    exit 0
else
    exit 1
fi